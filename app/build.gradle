import com.android.ide.common.signing.KeytoolException

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def AAVersion = '4.5.2'

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

File debugKeyStoreFile, releaseKeyStoreFile

if (keystorePropertiesFile.canRead()) {
    // Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    if (keystoreProperties != null) {
        debugKeyStoreFile = file(keystoreProperties['debugStoreFile'])
        releaseKeyStoreFile = file(keystoreProperties['releaseStoreFile'])
    }
} else {
    println '\'keystore.properties\' not found!'
}

static def getJenkinsBuildNumber() {
    def number = System.getenv("BUILD_NUMBER") as Integer ?: 0
    return number
}

android {
    signingConfigs {
        debug {
            if (keystoreProperties != null) {
                try {
                    if (debugKeyStoreFile != null && debugKeyStoreFile.canRead()) {
                        keyAlias keystoreProperties['debugKeyAlias']
                        keyPassword keystoreProperties['debugKeyPassword']
                        storeFile file(keystoreProperties['debugStoreFile'])
                        storePassword keystoreProperties['debugStorePassword']
                    }
                } catch (KeytoolException e) {
                    println '\'debug keystore\' not found! ' + e
                }
            }
        }
        release {
            if (keystoreProperties != null) {
                try {
                    if (releaseKeyStoreFile != null && releaseKeyStoreFile.canRead()) {
                        keyAlias keystoreProperties['releaseKeyAlias']
                        keyPassword keystoreProperties['releaseKeyPassword']
                        storeFile file(keystoreProperties['releaseStoreFile'])
                        storePassword keystoreProperties['releaseStorePassword']
                    }
                } catch (KeytoolException e) {
                    println '\'release keystore\' not found! ' + e
                }
            }
        }
    }
    buildToolsVersion '28.0.3'
    compileSdkVersion 28
    defaultConfig {
        applicationId "tw.tonyyang.englishwords"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 2
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        project.ext.set("archivesBaseName", "englishwords_ver_" + versionName + "-" + getJenkinsBuildNumber())

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
                arguments = ["resourcePackageName": android.defaultConfig.applicationId]
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix '-DEBUG'
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v13:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'junit:junit:4.12'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    annotationProcessor "org.androidannotations:androidannotations:$AAVersion"
    implementation "org.androidannotations:androidannotations-api:$AAVersion"
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'com.hedgehog.ratingbar:app:1.1.2'
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
    mavenLocal()
}

apply plugin: 'com.google.gms.google-services'